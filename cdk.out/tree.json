{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "Dev-liveAdminController-WebSocket": {
        "id": "Dev-liveAdminController-WebSocket",
        "path": "Dev-liveAdminController-WebSocket",
        "children": {
          "ConnectionsTable": {
            "id": "ConnectionsTable",
            "path": "Dev-liveAdminController-WebSocket/ConnectionsTable",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "Dev-liveAdminController-WebSocket/ConnectionsTable/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::DynamoDB::Table",
                  "aws:cdk:cloudformation:props": {
                    "keySchema": [
                      {
                        "attributeName": "connectionId",
                        "keyType": "HASH"
                      }
                    ],
                    "attributeDefinitions": [
                      {
                        "attributeName": "connectionId",
                        "attributeType": "S"
                      }
                    ],
                    "provisionedThroughput": {
                      "readCapacityUnits": 5,
                      "writeCapacityUnits": 5
                    },
                    "sseSpecification": {
                      "sseEnabled": true
                    },
                    "tableName": "dev-liveadmincontroller-websocket"
                  }
                }
              },
              "ScalingRole": {
                "id": "ScalingRole",
                "path": "Dev-liveAdminController-WebSocket/ConnectionsTable/ScalingRole"
              }
            }
          },
          "ConnectionsTableArn": {
            "id": "ConnectionsTableArn",
            "path": "Dev-liveAdminController-WebSocket/ConnectionsTableArn"
          },
          "ApigatewayWebsocket": {
            "id": "ApigatewayWebsocket",
            "path": "Dev-liveAdminController-WebSocket/ApigatewayWebsocket",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Api",
              "aws:cdk:cloudformation:props": {
                "name": "dev-liveadmincontroller-websocket",
                "protocolType": "WEBSOCKET",
                "routeSelectionExpression": "$request.body.message"
              }
            }
          },
          "ApigatewayWebsocketStage": {
            "id": "ApigatewayWebsocketStage",
            "path": "Dev-liveAdminController-WebSocket/ApigatewayWebsocketStage",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Stage",
              "aws:cdk:cloudformation:props": {
                "apiId": {
                  "Ref": "ApigatewayWebsocket"
                },
                "stageName": "dev",
                "autoDeploy": true,
                "description": "development Stage"
              }
            }
          },
          "authorizer": {
            "id": "authorizer",
            "path": "Dev-liveAdminController-WebSocket/authorizer",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "Dev-liveAdminController-WebSocket/authorizer/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Dev-liveAdminController-WebSocket/authorizer/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "Dev-liveAdminController-WebSocket/authorizer/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "Dev-liveAdminController-WebSocket/authorizer/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "ConnectionsTable8000B8A1",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Ref": "AWS::NoValue"
                                    }
                                  ]
                                },
                                {
                                  "Action": "execute-api:ManageConnections",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:aws:execute-api:ap-southeast-2:822618848665:",
                                        {
                                          "Ref": "ApigatewayWebsocket"
                                        },
                                        "/*"
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "authorizerServiceRoleDefaultPolicyABE8B38C",
                            "roles": [
                              {
                                "Ref": "authorizerServiceRoleC3069BB4"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Code": {
                "id": "Code",
                "path": "Dev-liveAdminController-WebSocket/authorizer/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "Dev-liveAdminController-WebSocket/authorizer/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "Dev-liveAdminController-WebSocket/authorizer/Code/AssetBucket"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "Dev-liveAdminController-WebSocket/authorizer/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "AssetParameters140487c1793ec87456a8ac1df895c74e0d483c3e242b4a0d6e541cf70a98960dS3Bucket23F78941"
                      },
                      "s3Key": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters140487c1793ec87456a8ac1df895c74e0d483c3e242b4a0d6e541cf70a98960dS3VersionKeyE956791A"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters140487c1793ec87456a8ac1df895c74e0d483c3e242b4a0d6e541cf70a98960dS3VersionKeyE956791A"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    },
                    "handler": "websocket.authorizer",
                    "role": {
                      "Fn::GetAtt": [
                        "authorizerServiceRoleC3069BB4",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs12.x",
                    "environment": {
                      "variables": {
                        "TABLE_NAME": {
                          "Ref": "ConnectionsTable8000B8A1"
                        },
                        "ENVIRONMENT": "development"
                      }
                    },
                    "functionName": "dev-liveadmincontroller-websocket-authorizer"
                  }
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "Dev-liveAdminController-WebSocket/authorizer/LogRetention",
                "children": {
                  "Provider": {
                    "id": "Provider",
                    "path": "Dev-liveAdminController-WebSocket/authorizer/LogRetention/Provider"
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "Dev-liveAdminController-WebSocket/authorizer/LogRetention/Resource"
                  }
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "Dev-liveAdminController-WebSocket/authorizer/LogGroup"
              },
              "InvokeServicePrincipal(apigateway.amazonaws.com)": {
                "id": "InvokeServicePrincipal(apigateway.amazonaws.com)",
                "path": "Dev-liveAdminController-WebSocket/authorizer/InvokeServicePrincipal(apigateway.amazonaws.com)",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "authorizerD23CB5CD",
                        "Arn"
                      ]
                    },
                    "principal": "apigateway.amazonaws.com"
                  }
                }
              }
            }
          },
          "AssetParameters": {
            "id": "AssetParameters",
            "path": "Dev-liveAdminController-WebSocket/AssetParameters",
            "children": {
              "140487c1793ec87456a8ac1df895c74e0d483c3e242b4a0d6e541cf70a98960d": {
                "id": "140487c1793ec87456a8ac1df895c74e0d483c3e242b4a0d6e541cf70a98960d",
                "path": "Dev-liveAdminController-WebSocket/AssetParameters/140487c1793ec87456a8ac1df895c74e0d483c3e242b4a0d6e541cf70a98960d",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "Dev-liveAdminController-WebSocket/AssetParameters/140487c1793ec87456a8ac1df895c74e0d483c3e242b4a0d6e541cf70a98960d/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "Dev-liveAdminController-WebSocket/AssetParameters/140487c1793ec87456a8ac1df895c74e0d483c3e242b4a0d6e541cf70a98960d/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "Dev-liveAdminController-WebSocket/AssetParameters/140487c1793ec87456a8ac1df895c74e0d483c3e242b4a0d6e541cf70a98960d/ArtifactHash"
                  }
                }
              },
              "5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a": {
                "id": "5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a",
                "path": "Dev-liveAdminController-WebSocket/AssetParameters/5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "Dev-liveAdminController-WebSocket/AssetParameters/5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "Dev-liveAdminController-WebSocket/AssetParameters/5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "Dev-liveAdminController-WebSocket/AssetParameters/5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22a/ArtifactHash"
                  }
                }
              }
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "Dev-liveAdminController-WebSocket/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "Dev-liveAdminController-WebSocket/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Dev-liveAdminController-WebSocket/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "Dev-liveAdminController-WebSocket/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "Dev-liveAdminController-WebSocket/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Code": {
                "id": "Code",
                "path": "Dev-liveAdminController-WebSocket/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "Dev-liveAdminController-WebSocket/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "Dev-liveAdminController-WebSocket/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "Dev-liveAdminController-WebSocket/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "AssetParameters5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22aS3Bucket4E933C7F"
                      },
                      "s3Key": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22aS3VersionKeyB83CC434"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters5741f85917ffca30b209ad61e375d3d3bae0457270071f7aca8ca81be19bd22aS3VersionKeyB83CC434"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    },
                    "handler": "index.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs10.x"
                  }
                }
              }
            }
          },
          "ApiGatewayCognitoAuthorizer": {
            "id": "ApiGatewayCognitoAuthorizer",
            "path": "Dev-liveAdminController-WebSocket/ApiGatewayCognitoAuthorizer",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Authorizer",
              "aws:cdk:cloudformation:props": {
                "apiId": {
                  "Ref": "ApigatewayWebsocket"
                },
                "authorizerType": "REQUEST",
                "identitySource": [
                  "route.request.querystring.token"
                ],
                "name": "CustomCognitoAuthorizer",
                "authorizerUri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "authorizerD23CB5CD",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              }
            }
          },
          "OnConnect": {
            "id": "OnConnect",
            "path": "Dev-liveAdminController-WebSocket/OnConnect",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "Dev-liveAdminController-WebSocket/OnConnect/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Dev-liveAdminController-WebSocket/OnConnect/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "Dev-liveAdminController-WebSocket/OnConnect/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "Dev-liveAdminController-WebSocket/OnConnect/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "ConnectionsTable8000B8A1",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Ref": "AWS::NoValue"
                                    }
                                  ]
                                },
                                {
                                  "Action": "execute-api:ManageConnections",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:aws:execute-api:ap-southeast-2:822618848665:",
                                        {
                                          "Ref": "ApigatewayWebsocket"
                                        },
                                        "/*"
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "OnConnectServiceRoleDefaultPolicyB37A8C69",
                            "roles": [
                              {
                                "Ref": "OnConnectServiceRoleCE52AE06"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Code": {
                "id": "Code",
                "path": "Dev-liveAdminController-WebSocket/OnConnect/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "Dev-liveAdminController-WebSocket/OnConnect/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "Dev-liveAdminController-WebSocket/OnConnect/Code/AssetBucket"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "Dev-liveAdminController-WebSocket/OnConnect/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "AssetParameters140487c1793ec87456a8ac1df895c74e0d483c3e242b4a0d6e541cf70a98960dS3Bucket23F78941"
                      },
                      "s3Key": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters140487c1793ec87456a8ac1df895c74e0d483c3e242b4a0d6e541cf70a98960dS3VersionKeyE956791A"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters140487c1793ec87456a8ac1df895c74e0d483c3e242b4a0d6e541cf70a98960dS3VersionKeyE956791A"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    },
                    "handler": "websocket.onConnect",
                    "role": {
                      "Fn::GetAtt": [
                        "OnConnectServiceRoleCE52AE06",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs12.x",
                    "environment": {
                      "variables": {
                        "TABLE_NAME": {
                          "Ref": "ConnectionsTable8000B8A1"
                        },
                        "ENVIRONMENT": "development"
                      }
                    },
                    "functionName": "dev-liveadmincontroller-websocket-onconnect"
                  }
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "Dev-liveAdminController-WebSocket/OnConnect/LogRetention",
                "children": {
                  "Provider": {
                    "id": "Provider",
                    "path": "Dev-liveAdminController-WebSocket/OnConnect/LogRetention/Provider"
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "Dev-liveAdminController-WebSocket/OnConnect/LogRetention/Resource"
                  }
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "Dev-liveAdminController-WebSocket/OnConnect/LogGroup"
              },
              "InvokeServicePrincipal(apigateway.amazonaws.com)": {
                "id": "InvokeServicePrincipal(apigateway.amazonaws.com)",
                "path": "Dev-liveAdminController-WebSocket/OnConnect/InvokeServicePrincipal(apigateway.amazonaws.com)",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "OnConnect5B7981D4",
                        "Arn"
                      ]
                    },
                    "principal": "apigateway.amazonaws.com"
                  }
                }
              }
            }
          },
          "ConnectRouteIntegration": {
            "id": "ConnectRouteIntegration",
            "path": "Dev-liveAdminController-WebSocket/ConnectRouteIntegration",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Integration",
              "aws:cdk:cloudformation:props": {
                "apiId": {
                  "Ref": "ApigatewayWebsocket"
                },
                "integrationType": "AWS_PROXY",
                "description": "ConnectRoute",
                "integrationUri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "OnConnect5B7981D4",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              }
            }
          },
          "ConnectRouteRoute": {
            "id": "ConnectRouteRoute",
            "path": "Dev-liveAdminController-WebSocket/ConnectRouteRoute",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Route",
              "aws:cdk:cloudformation:props": {
                "apiId": {
                  "Ref": "ApigatewayWebsocket"
                },
                "routeKey": "$connect",
                "authorizationType": "CUSTOM",
                "authorizerId": {
                  "Ref": "ApiGatewayCognitoAuthorizer"
                },
                "operationName": "ConnectRoute",
                "target": {
                  "Fn::Join": [
                    "",
                    [
                      "integrations/",
                      {
                        "Ref": "ConnectRouteIntegration"
                      }
                    ]
                  ]
                }
              }
            }
          },
          "OnDisconnect": {
            "id": "OnDisconnect",
            "path": "Dev-liveAdminController-WebSocket/OnDisconnect",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "Dev-liveAdminController-WebSocket/OnDisconnect/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Dev-liveAdminController-WebSocket/OnDisconnect/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "Dev-liveAdminController-WebSocket/OnDisconnect/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "Dev-liveAdminController-WebSocket/OnDisconnect/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "ConnectionsTable8000B8A1",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Ref": "AWS::NoValue"
                                    }
                                  ]
                                },
                                {
                                  "Action": "execute-api:ManageConnections",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:aws:execute-api:ap-southeast-2:822618848665:",
                                        {
                                          "Ref": "ApigatewayWebsocket"
                                        },
                                        "/*"
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "OnDisconnectServiceRoleDefaultPolicy06605459",
                            "roles": [
                              {
                                "Ref": "OnDisconnectServiceRole626BB7AE"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Code": {
                "id": "Code",
                "path": "Dev-liveAdminController-WebSocket/OnDisconnect/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "Dev-liveAdminController-WebSocket/OnDisconnect/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "Dev-liveAdminController-WebSocket/OnDisconnect/Code/AssetBucket"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "Dev-liveAdminController-WebSocket/OnDisconnect/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "AssetParameters140487c1793ec87456a8ac1df895c74e0d483c3e242b4a0d6e541cf70a98960dS3Bucket23F78941"
                      },
                      "s3Key": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters140487c1793ec87456a8ac1df895c74e0d483c3e242b4a0d6e541cf70a98960dS3VersionKeyE956791A"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters140487c1793ec87456a8ac1df895c74e0d483c3e242b4a0d6e541cf70a98960dS3VersionKeyE956791A"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    },
                    "handler": "websocket.onDisconnect",
                    "role": {
                      "Fn::GetAtt": [
                        "OnDisconnectServiceRole626BB7AE",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs12.x",
                    "environment": {
                      "variables": {
                        "TABLE_NAME": {
                          "Ref": "ConnectionsTable8000B8A1"
                        },
                        "ENVIRONMENT": "development"
                      }
                    },
                    "functionName": "dev-liveadmincontroller-websocket-ondisconnect"
                  }
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "Dev-liveAdminController-WebSocket/OnDisconnect/LogRetention",
                "children": {
                  "Provider": {
                    "id": "Provider",
                    "path": "Dev-liveAdminController-WebSocket/OnDisconnect/LogRetention/Provider"
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "Dev-liveAdminController-WebSocket/OnDisconnect/LogRetention/Resource"
                  }
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "Dev-liveAdminController-WebSocket/OnDisconnect/LogGroup"
              },
              "InvokeServicePrincipal(apigateway.amazonaws.com)": {
                "id": "InvokeServicePrincipal(apigateway.amazonaws.com)",
                "path": "Dev-liveAdminController-WebSocket/OnDisconnect/InvokeServicePrincipal(apigateway.amazonaws.com)",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "OnDisconnectDDB1160C",
                        "Arn"
                      ]
                    },
                    "principal": "apigateway.amazonaws.com"
                  }
                }
              }
            }
          },
          "DisconnectRouteIntegration": {
            "id": "DisconnectRouteIntegration",
            "path": "Dev-liveAdminController-WebSocket/DisconnectRouteIntegration",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Integration",
              "aws:cdk:cloudformation:props": {
                "apiId": {
                  "Ref": "ApigatewayWebsocket"
                },
                "integrationType": "AWS_PROXY",
                "description": "DisconnectRoute",
                "integrationUri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "OnDisconnectDDB1160C",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              }
            }
          },
          "DisconnectRouteRoute": {
            "id": "DisconnectRouteRoute",
            "path": "Dev-liveAdminController-WebSocket/DisconnectRouteRoute",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Route",
              "aws:cdk:cloudformation:props": {
                "apiId": {
                  "Ref": "ApigatewayWebsocket"
                },
                "routeKey": "$disconnect",
                "authorizationType": "NONE",
                "operationName": "DisconnectRoute",
                "target": {
                  "Fn::Join": [
                    "",
                    [
                      "integrations/",
                      {
                        "Ref": "DisconnectRouteIntegration"
                      }
                    ]
                  ]
                }
              }
            }
          },
          "OnMessage": {
            "id": "OnMessage",
            "path": "Dev-liveAdminController-WebSocket/OnMessage",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "Dev-liveAdminController-WebSocket/OnMessage/ServiceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "Dev-liveAdminController-WebSocket/OnMessage/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "Dev-liveAdminController-WebSocket/OnMessage/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "Dev-liveAdminController-WebSocket/OnMessage/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "ConnectionsTable8000B8A1",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Ref": "AWS::NoValue"
                                    }
                                  ]
                                },
                                {
                                  "Action": "execute-api:ManageConnections",
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:aws:execute-api:ap-southeast-2:822618848665:",
                                        {
                                          "Ref": "ApigatewayWebsocket"
                                        },
                                        "/*"
                                      ]
                                    ]
                                  }
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "OnMessageServiceRoleDefaultPolicy0810DFDA",
                            "roles": [
                              {
                                "Ref": "OnMessageServiceRoleF2128E59"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              },
              "Code": {
                "id": "Code",
                "path": "Dev-liveAdminController-WebSocket/OnMessage/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "Dev-liveAdminController-WebSocket/OnMessage/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "Dev-liveAdminController-WebSocket/OnMessage/Code/AssetBucket"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "Dev-liveAdminController-WebSocket/OnMessage/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "AssetParameters140487c1793ec87456a8ac1df895c74e0d483c3e242b4a0d6e541cf70a98960dS3Bucket23F78941"
                      },
                      "s3Key": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters140487c1793ec87456a8ac1df895c74e0d483c3e242b4a0d6e541cf70a98960dS3VersionKeyE956791A"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters140487c1793ec87456a8ac1df895c74e0d483c3e242b4a0d6e541cf70a98960dS3VersionKeyE956791A"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    },
                    "handler": "websocket.onMessage",
                    "role": {
                      "Fn::GetAtt": [
                        "OnMessageServiceRoleF2128E59",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs12.x",
                    "environment": {
                      "variables": {
                        "TABLE_NAME": {
                          "Ref": "ConnectionsTable8000B8A1"
                        },
                        "ENVIRONMENT": "development"
                      }
                    },
                    "functionName": "dev-liveadmincontroller-websocket-onmessage"
                  }
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "Dev-liveAdminController-WebSocket/OnMessage/LogRetention",
                "children": {
                  "Provider": {
                    "id": "Provider",
                    "path": "Dev-liveAdminController-WebSocket/OnMessage/LogRetention/Provider"
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "Dev-liveAdminController-WebSocket/OnMessage/LogRetention/Resource"
                  }
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "Dev-liveAdminController-WebSocket/OnMessage/LogGroup"
              },
              "InvokeServicePrincipal(apigateway.amazonaws.com)": {
                "id": "InvokeServicePrincipal(apigateway.amazonaws.com)",
                "path": "Dev-liveAdminController-WebSocket/OnMessage/InvokeServicePrincipal(apigateway.amazonaws.com)",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "OnMessageF7C2AAE0",
                        "Arn"
                      ]
                    },
                    "principal": "apigateway.amazonaws.com"
                  }
                }
              }
            }
          },
          "OnMessageRouteIntegration": {
            "id": "OnMessageRouteIntegration",
            "path": "Dev-liveAdminController-WebSocket/OnMessageRouteIntegration",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Integration",
              "aws:cdk:cloudformation:props": {
                "apiId": {
                  "Ref": "ApigatewayWebsocket"
                },
                "integrationType": "AWS_PROXY",
                "description": "OnMessageRoute",
                "integrationUri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "OnMessageF7C2AAE0",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              }
            }
          },
          "OnMessageRouteRoute": {
            "id": "OnMessageRouteRoute",
            "path": "Dev-liveAdminController-WebSocket/OnMessageRouteRoute",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::ApiGatewayV2::Route",
              "aws:cdk:cloudformation:props": {
                "apiId": {
                  "Ref": "ApigatewayWebsocket"
                },
                "routeKey": "sendmessage",
                "authorizationType": "NONE",
                "operationName": "OnMessageRoute",
                "target": {
                  "Fn::Join": [
                    "",
                    [
                      "integrations/",
                      {
                        "Ref": "OnMessageRouteIntegration"
                      }
                    ]
                  ]
                }
              }
            }
          },
          "WebSocketURI": {
            "id": "WebSocketURI",
            "path": "Dev-liveAdminController-WebSocket/WebSocketURI"
          }
        }
      }
    }
  }
}